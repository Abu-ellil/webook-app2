require("dotenv").config();
const { PrismaClient } = require("@prisma/client");
const bcrypt = require("bcryptjs");

async function initDatabase() {
  console.log(
    "🔗 Connecting to:",
    process.env.DATABASE_URL?.substring(0, 50) + "..."
  );

  // 使用 Prisma 客户端连接数据库
  const prisma = new PrismaClient();

  try {
    // Prisma 应该已经根据 schema 创建了表，这里我们只需要检查并创建默认数据

    // 检查 Event 表是否存在数据
    const eventCount = await prisma.event.count();
    if (eventCount === 0) {
      console.log("✅ No events found, adding sample event...");
      // 添加示例事件
      await prisma.event.create({
        data: {
          id: "event-1",
          title: "حفل موسيقي عربي",
          description: "حفل موسيقي ممتع مع أفضل الفنانين العرب",
          image: "/images/sample-event.jpg",
          date: new Date("2024-12-31T20:00:00"),
          venue: "دار الأوبرا المصرية",
          category: "حفل موسيقي",
        }
      });
    }

    console.log("✅ Database tables created successfully!");

    // Check if we need to create an admin user
    const adminCount = await prisma.admin.count();
    if (adminCount === 0) {
      // Hash the password for security
      const saltRounds = 10;
      const hashedPassword = await bcrypt.hash("admin123", saltRounds);

      await prisma.admin.create({
        data: {
          id: "admin-1",
          username: "admin",
          password: hashedPassword,
        }
      });
      console.log(
        "✅ Default admin user created (username: admin, password: admin123)"
      );
    }
  } catch (error) {
    console.error("❌ Error initializing database:", error);
  } finally {
    await prisma.$disconnect();
  }
}

initDatabase();